http://shareopps.co.za/app/api/get_nonce/?controller=posts&method=create_post
http://shareopps.co.za/app/api/posts/create_post/?nonce=9a820b7530&title=NewPostUser&status=draft
file:///home/kolawole/Documents/client/rozina/javascript%20-%20How%20to%20use%20localStorage%20to%20store%20and%20get%20back%20user%20login%20details_%20-%20Stack%20Overflow.html

file:///home/kolawole/Documents/client/rozina/Ionic%20Framework%20+%20Firebase%20Tutorial.html


.factory('Auth', function($firebaseAuth) {
  var firebaseUrl = "https://sopps.firebaseio.com/";
  //Creation of U
  var usersRef = new Firebase(firebaseUrl+'/users');
  return $firebaseAuth(usersRef);
})

.factory('AuthService', function($firebaseAuth,  $firebaseObject, $firebaseArray, $state, $firebaseRef){

  var authUser = $firebaseAuth($firebaseRef.default);

  return {
    /*
      The function receives an email, password, name and creates a new user
      After the user is created it stores the user details in the DB.
    */
    signupEmail: function(newEmail, newPassword, newFullName, newInstitution, newCourseOfStudy){

    /**
     * Here we're using angular-fire $createUser to create a new user, just passing the email, password and
     * full name.
     *
     * After that we're creating the record in the DB in a "userProfile" node, remember,
     * creating a user doesn't show him/her in the DB, so we need to create that record ourselves.
     *
     * And then we are catching any errors that might happen :P
     */
      authUser.$createUser({
        email: newEmail,
        password: newPassword,
        fullName: newFullName,
        institution: newInstitution,
        courseOfStudy: newCourseOfStudy
      }).then(function(authData){
        authUser.$authWithPassword({
          "email": newEmail,
          "password": newPassword
        }).then (function(authData){
            $firebaseRef.default.child("userProfile").child(authData.uid).set({
            name: newFullName,
            email: newEmail,
            institution: newInstitution,
            newCourseOfStudy: newCourseOfStudy
          });
          $state.go('app.profile');
        });
        }).catch(function(error){
            switch (error.code) {
              case "EMAIL_TAKEN":
                alert("Bro, someone's using that email!");
                break;
              case "INVALID_EMAIL":
                alert("Dude, that is not an email address!");
                break;
              default:
                alert("Error creating user:", error);
            }
        });
    },

  /**
   * Here we are login our user in, we user angular-fire $authWithPassword assing the email and password.
   * After that we send the user to our dashboard.
   */
    loginUser: function(email, password){
      authUser.$authWithPassword({
        "email": email,
        "password": password
      }).then (function(authData){
        window.localStorage.setItem("email", email);
        window.localStorage.setItem("password", password);
        $state.go('app.wordpress');

      }).catch(function(error){
        console.log(error);
      });
    },

    logoutUser: function(){
      authUser.$unauth();
      $state.go('auth.login');
    },

  *
   * This one explain itself, if the user doesn't remember his password he'll click in the "forgot you password?"
   * link and we need to send him a token so he can log in again
   *
   * NOTE: This doesn't send a reset password link, this sends a token he can use as a password to log in and
   * change his password to something he remembers.
   
    resetPassword: function(resetEmail){
      authUser.$resetPassword({
        email: resetEmail
      }).then(function(){
        console.log('Password Reset Email was sent successfully');
      }).catch(function(error){
        console.log(error);
      });
    },

    /**
     * This is going to take the user's email + oldPassword + newPassword and change the Password
     * used for login.
     * After changing the password it's going to redirect the user to the profile page.
     */
    changePassword: function(email, oldPassword, newPassword){
      authUser.$changePassword({
        email: email,
        oldPassword: oldPassword,
        newPassword: newPassword
      }).then(function(){
        alert('Password Changed!');
        $state.go('profile');
      }).catch(function(error){
        console.log(error);
      });
    },

    /**
     * This is going to take the user's oldEmail + newEmail + password and change the email
     * used for login.
     *
     * Remember, afeter changing the login email we also need to update the userProfile.userId node
     * I'm going to handle this in the controller using the userProfileData function below.
     */
    changeEmail: function(oldEmail, newEmail, password){
      authUser.$changeEmail({
        oldEmail: oldEmail,
        newEmail: newEmail,
        password: password
      }).then(function(){
          alert('Email Successfully Changed!');
          $state.go('app.profile');
      }).catch(function(error){
        console.log(error);
      });
    },

    changeInstitution : function(email, password){
        authUser.$authWithPassword({
          email: email
        }).then(function(authData){
            $firebaseRef.default.child("userProfile").child(authData.uid).set({
            institution: newInstitution,          
          }).then(function(){
            alert('Institution Successfully Changed!');
            $state.go('app.profile');
          });       
        }).catch(function(error){
           console.log(error);
        });
    },
    changeCourseOfStudy : function(email, password){
        authUser.$authWithPassword({
          email: email,
          password: password
        }).then(function(authData){
            $firebaseRef.default.child("userProfile").child(authData.uid).set({
            courseOfStudy: newCourseOfStudy,          
          }).then(function(){
            alert('Institution Successfully Changed!');
            $state.go('app.profile');
            }) ;
          }) .catch(function(error){
             console.log(error); 
        });
    },


    /**
     * This will return the userProfile.userId node so we can update the email.
     */
    userProfileData: function(userId){
      var userProfileRef = $firebaseRef.default.child('userProfile').child(userId);
      return $firebaseObject(userProfileRef);
    }

  };

})


.controller('AppCtrl', function($scope, $ionicConfig) {

})


.controller('AuthCtrl', function($scope, $ionicConfig) {

})


.controller('AuthCtrl', function($scope, $ionicConfig) {

})

//LOGIN
.controller('LoginCtrl', function(Auth, AuthService, $scope, $state, $templateCache, $q, $rootScope) {
// We create a variable called 'data', we asign it to an empty object and bind it to scope, to handle the form data.
	$scope.data = {};

/**
**https://sopps.firebaseio.com/
 * Our function is pretty simple, get the username and password from the form, and send it to our auth service, that's it.
 * The auth service will take care of everything else for you!
 * @return {[type]} [description]
 */
	$scope.loginEmail = function(loginForm){
		if (loginForm.$valid) {
			var email = $scope.data.email;
			var password = $scope.data.password;
			AuthService.loginUser(email, password);
			
			window.localStorage.setItem("email", email);
			window.localStorage.setItem("password", password);
		}
	};

})

.controller('SignupCtrl', function(AuthService, Auth, $scope, $state) {
	
	$scope.data = {};

	var firebaseUrl = "https://sopps.firebaseio.com/";

	var usersRef = new Firebase(firebaseUrl+'/userProfile');

	$scope.createUser = function(signupForm){
		if (signupForm.$valid) {
			var newEmail = $scope.data.email;
			var newPassword = $scope.data.password;
			var newFullName = $scope.data.fullName;
			var newInstitution = $scope.data.institution;
			var newCourseOfStudy = $scope.data.courseOfStudy;
			AuthService.signupEmail(newEmail, newPassword, newFullName, newInstitution, newCourseOfStudy);
		}

	};

})


.controller('ProfileCtrl', function($firebaseRef, $scope, user, AuthService, $state, $ionicPopup, $firebaseObject){
	// Creating an empty object called data and binding it to the $scope.
	$scope.data = {};

		// Creating a userProfile object that will hold the userProfile.userId node
	$scope.userProfile = AuthService.userProfileData(user.uid);



	/**
	 * This function will call our service and log the user out.
	 */
	$scope.logoutUser = function(){
		AuthService.logoutUser();
	};

	$scope.changeInstitution = function(changeInstitutionForm){
	  if (changeInstitutionForm.$valid) {
	    AuthService.changeInstitution(user.password.email, $scope.data.newInstitution, $scope.data.password);
	    $scope.userProfile.institution = $scope.data.newInstitution;
	    $scope.userProfile.$save();
	  }
	};

	$scope.changeCourseOfStudy = function(changeCourseForm){
	  if (changeCourseForm.$valid) { 
	    AuthService.changeCourseOfStudy(user.password.email, $scope.data.newCourseOfStudy, $scope.data.password);
	    $scope.userProfile.courseOfStudy = $scope.data.newCourseOfStudy;
	    $scope.userProfile.$save();
	  }
	};

	/**
	 * This function will get the oldPassword and newPassword values from the form and then pass them
	 * to our changePassword() function inside the auth service.
	 */
	$scope.changePassword = function(changePasswordForm){
	  if (changePasswordForm.$valid) {
	    var oldPassword = $scope.data.oldPassword;
	    var newPassword = $scope.data.newPassword;
	    
	    AuthService.changePassword(user.password.email, oldPassword, newPassword);
	  }
	};

		/**
		 * This will take the user's old email, the new email he wants and the user password and pass it to our
		 * changeEmail() function inside the auth service.
		 *
		 * Then it's going to change the email in our userProfile variable (which points to the userProfile
		 * node in Firebase) and it's going to save that new value.
		 */
	$scope.changeEmail = function(changeEmailForm){
	  if (changeEmailForm.$valid) {
	    AuthService.changeEmail(user.password.email, $scope.data.newEmail, $scope.data.password);
	    $scope.userProfile.email = $scope.data.newEmail;
	    $scope.userProfile.$save();
	  }
	};
})
